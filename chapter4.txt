# 4.0 Input value
 - 기본적인 Input element를 작성하고 button click에 따라서 console.log()를 진행하자. 

# 4.1 Form Submission
 - console.log()에 들어갈 username이 null이 되지 않도록 그리고 너무 길지 않도록 제어하자. 
 - 유효성 검사 required는 form으로 감싸진 형태에서 작동함. 
 - HTML에서 거의 모든 일을 처리해냈음. 

# 4.2 Events
 - submit을 할 떄 console에서 나타났다가 사라짐. 일단 인식에는 성공함.  
 - parameter vs argument 
  : 정의된 값 , 실제로 전달되는 값. 
 - event Object가 있음을 이해해야한다. 

# 4.3 Events part Two
 - link 타고 들어가는 것을 막음. -> alert()를 통해 ok를 누르기 전까지는 작동되지 않게
 만들어 놓음. 
 - a를 anchor라고 부르고 있음. 

# 4.4 Getting Username
 - 제출 후에 username이 form에서 사라지기를 원함. 
 - form을 제거
  - css에서 특정 조건에 display: none;을 하도록 만듦. 

# 4.5 Saving Username
 - 새로고침을 할 때마다 새로 form을 작성하는 것이 너무 귀찮다고 함. 
 - localStorage API를 사용. 
 - 개발자 도구에서 Application에 들어가면 찾을 수 있음. 
 ex) 
 localStorage.setItem()
 localStorage.getItem()
 localStorage.removeItem()
 - 저장은 되었으나 아직 새로고침에서 이루어지는 form 생성은 그대로임. 약간의 변화가 더 필요함. 

